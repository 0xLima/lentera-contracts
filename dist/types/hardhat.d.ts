/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Ownable2Step",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable2Step__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Activity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Activity__factory>;
    getContractFactory(
      name: "IActivity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActivity__factory>;
    getContractFactory(
      name: "IFeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeManager__factory>;
    getContractFactory(
      name: "ILoanManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoanManager__factory>;
    getContractFactory(
      name: "ILoanToValueRatio",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoanToValueRatio__factory>;
    getContractFactory(
      name: "IOfferManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOfferManager__factory>;
    getContractFactory(
      name: "IPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceFeed__factory>;
    getContractFactory(
      name: "IScore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IScore__factory>;
    getContractFactory(
      name: "LendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPool__factory>;
    getContractFactory(
      name: "LendingPoolProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPoolProvider__factory>;
    getContractFactory(
      name: "ActivityLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActivityLibrary__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "LoanLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoanLibrary__factory>;
    getContractFactory(
      name: "OfferLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OfferLibrary__factory>;
    getContractFactory(
      name: "RequestLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RequestLibrary__factory>;
    getContractFactory(
      name: "LoanToValueRatio",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoanToValueRatio__factory>;
    getContractFactory(
      name: "FeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeManager__factory>;
    getContractFactory(
      name: "LoanManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoanManager__factory>;
    getContractFactory(
      name: "OfferManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OfferManager__factory>;
    getContractFactory(
      name: "SimpleInterest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleInterest__factory>;
    getContractFactory(
      name: "Statistic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Statistic__factory>;
    getContractFactory(
      name: "PriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceFeed__factory>;
    getContractFactory(
      name: "Score",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Score__factory>;

    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Ownable2Step",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable2Step>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Activity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Activity>;
    getContractAt(
      name: "IActivity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActivity>;
    getContractAt(
      name: "IFeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeManager>;
    getContractAt(
      name: "ILoanManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoanManager>;
    getContractAt(
      name: "ILoanToValueRatio",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoanToValueRatio>;
    getContractAt(
      name: "IOfferManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOfferManager>;
    getContractAt(
      name: "IPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceFeed>;
    getContractAt(
      name: "IScore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IScore>;
    getContractAt(
      name: "LendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingPool>;
    getContractAt(
      name: "LendingPoolProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingPoolProvider>;
    getContractAt(
      name: "ActivityLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActivityLibrary>;
    getContractAt(
      name: "Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "LoanLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LoanLibrary>;
    getContractAt(
      name: "OfferLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OfferLibrary>;
    getContractAt(
      name: "RequestLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RequestLibrary>;
    getContractAt(
      name: "LoanToValueRatio",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LoanToValueRatio>;
    getContractAt(
      name: "FeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeManager>;
    getContractAt(
      name: "LoanManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LoanManager>;
    getContractAt(
      name: "OfferManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OfferManager>;
    getContractAt(
      name: "SimpleInterest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleInterest>;
    getContractAt(
      name: "Statistic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Statistic>;
    getContractAt(
      name: "PriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceFeed>;
    getContractAt(
      name: "Score",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Score>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
